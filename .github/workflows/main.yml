on:
  workflow_dispatch:
  push:
  pull_request:

name: CI

jobs:
  lint:
    name: Lint All Models
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get IcarusVerilog
        run: |
          sudo apt-get install -y iverilog
      - name: Verify
        run: |
          cd verification
          for SIZE in $(cat ./.github/workflows/sizes.txt); do
              export PATTERN=tb_RAM$SIZE
              /bin/bash -c "make lint"
          done
  verify_models:
    name: Verify Models
    runs-on: ubuntu-latest
    strategy:
      matrix:
        size:
          [
            "8x32",
            "32x32",
            "128x32",
            "256x32",
            "512x32",
            "1024x32",
            "2048x32",
            "8x32_1RW1R",
            "32x32_1RW1R",
            "128x32_1RW1R",
            "256x32_1RW1R",
            "512x32_1RW1R",
            "1024x32_1RW1R",
            "2048x32_1RW1R",
          ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get IcarusVerilog
        run: |
          sudo apt-get install -y iverilog
      - name: Run Verification
        run: |
          export PATTERN=tb_RAM${{ matrix.size }}
          cd verification/
          /bin/bash -c "! make | grep -c FATAL"
  test_flow:
    name: Test Flow (1RW, 1RW1R)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - { count: "8", width: "8", variant: "DEFAULT" }
          # - { count: "8", width: "8", variant: "1RW1R" }
          # - { count: "8", width: "16", variant: "DEFAULT" }
          # - { count: "8", width: "16", variant: "1RW1R" }
          # - { count: "8", width: "32", variant: "DEFAULT" }
          # - { count: "8", width: "32", variant: "1RW1R" }
          - { count: "32", width: "8", variant: "DEFAULT" }
          - { count: "32", width: "8", variant: "1RW1R" }
          - { count: "32", width: "16", variant: "DEFAULT" }
          - { count: "32", width: "16", variant: "1RW1R" }
          - { count: "32", width: "32", variant: "DEFAULT" }
          # - { count: "32", width: "32", variant: "1RW1R" } # Timeout
          - { count: "256", width: "8", variant: "DEFAULT" }
          - { count: "256", width: "8", variant: "1RW1R" }
          - { count: "256", width: "16", variant: "DEFAULT" }
          # - { count: "256", width: "16", variant: "1RW1R" } # Timeout
          - { count: "256", width: "32", variant: "DEFAULT" }
          #- { count: "256", width: "32", variant: "1RW1R" } # Timeout
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run
        run: |
          pip3 install --upgrade --no-cache-dir -r ./requirements.txt
          ./dffram.py -s ${{ matrix.count }}x${{ matrix.width }} -b sky130A:sky130_fd_sc_hd:ram -v ${{ matrix.variant }}
  test_flow_rf:
    name: Test Flow (2R1W)
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - { count: "32", width: "32", variant: "2R1W" }
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run
        run: |
          pip3 install --upgrade --no-cache-dir -r ./requirements.txt
          ./dffram.py -s ${{ matrix.count }}x${{ matrix.width }} -b sky130A:sky130_fd_sc_hd:rf -v ${{ matrix.variant }}
